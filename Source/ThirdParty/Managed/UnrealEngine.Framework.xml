<?xml version="1.0"?>
<doc>
    <assembly>
        <name>UnrealEngine.Framework</name>
    </assembly>
    <members>
        <member name="T:UnrealEngine.Framework.LinearColor">
            <summary>
            A linear 32-bit floating-point RGBA color
            </summary>
        </member>
        <member name="M:UnrealEngine.Framework.LinearColor.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance the linear color
            </summary>
        </member>
        <member name="M:UnrealEngine.Framework.LinearColor.#ctor(System.Numerics.Vector3,System.Single)">
            <summary>
            Initializes a new instance the linear color
            </summary>
        </member>
        <member name="M:UnrealEngine.Framework.LinearColor.#ctor(System.Numerics.Vector4)">
            <summary>
            Initializes a new instance the linear color
            </summary>
        </member>
        <member name="M:UnrealEngine.Framework.LinearColor.#ctor(System.Drawing.Color)">
            <summary>
            Initializes a new instance the linear color
            </summary>
        </member>
        <member name="M:UnrealEngine.Framework.LinearColor.#ctor(System.Single[])">
            <summary>
            Initializes a new instance the linear color
            </summary>
        </member>
        <member name="P:UnrealEngine.Framework.LinearColor.Item(System.Int32)">
            <summary>
            Gets or sets the component at the specified index
            </summary>
        </member>
        <member name="P:UnrealEngine.Framework.LinearColor.R">
            <summary>
            Gets or sets the red component of the linear color
            </summary>
        </member>
        <member name="P:UnrealEngine.Framework.LinearColor.G">
            <summary>
            Gets or sets the green component of the linear color
            </summary>
        </member>
        <member name="P:UnrealEngine.Framework.LinearColor.B">
            <summary>
            Gets or sets the blue component of the linear color
            </summary>
        </member>
        <member name="P:UnrealEngine.Framework.LinearColor.A">
            <summary>
            Gets or sets the alpha component of the linear color
            </summary>
        </member>
        <member name="P:UnrealEngine.Framework.LinearColor.Black">
            <summary>
            The black color
            </summary>
        </member>
        <member name="P:UnrealEngine.Framework.LinearColor.Blue">
            <summary>
            The blue color
            </summary>
        </member>
        <member name="P:UnrealEngine.Framework.LinearColor.Green">
            <summary>
            The green color
            </summary>
        </member>
        <member name="P:UnrealEngine.Framework.LinearColor.Grey">
            <summary>
            The grey color
            </summary>
        </member>
        <member name="P:UnrealEngine.Framework.LinearColor.Red">
            <summary>
            The red color
            </summary>
        </member>
        <member name="P:UnrealEngine.Framework.LinearColor.White">
            <summary>
            The white color
            </summary>
        </member>
        <member name="P:UnrealEngine.Framework.LinearColor.Yellow">
            <summary>
            The yellow color
            </summary>
        </member>
        <member name="M:UnrealEngine.Framework.LinearColor.op_Equality(UnrealEngine.Framework.LinearColor,UnrealEngine.Framework.LinearColor)">
            <summary>
            Tests for equality between two objects
            </summary>
        </member>
        <member name="M:UnrealEngine.Framework.LinearColor.op_Inequality(UnrealEngine.Framework.LinearColor,UnrealEngine.Framework.LinearColor)">
            <summary>
            Tests for inequality between two objects
            </summary>
        </member>
        <member name="M:UnrealEngine.Framework.LinearColor.op_Addition(UnrealEngine.Framework.LinearColor,UnrealEngine.Framework.LinearColor)">
            <summary>
            Adds two colors
            </summary>
        </member>
        <member name="M:UnrealEngine.Framework.LinearColor.op_Subtraction(UnrealEngine.Framework.LinearColor,UnrealEngine.Framework.LinearColor)">
            <summary>
            Subtracts two colors
            </summary>
        </member>
        <member name="M:UnrealEngine.Framework.LinearColor.op_Multiply(System.Single,UnrealEngine.Framework.LinearColor)">
            <summary>
            Multiplies two colors
            </summary>
        </member>
        <member name="M:UnrealEngine.Framework.LinearColor.op_Division(System.Single,UnrealEngine.Framework.LinearColor)">
            <summary>
            Divides two colors
            </summary>
        </member>
        <member name="M:UnrealEngine.Framework.LinearColor.op_Implicit(System.Drawing.Color)~UnrealEngine.Framework.LinearColor">
            <summary>
            Implicitly casts color instance to a linear color
            </summary>
        </member>
        <member name="M:UnrealEngine.Framework.LinearColor.op_Implicit(UnrealEngine.Framework.LinearColor)~System.String">
            <summary>
            Implicitly casts this instance to a string
            </summary>
        </member>
        <member name="M:UnrealEngine.Framework.LinearColor.Add(UnrealEngine.Framework.LinearColor,UnrealEngine.Framework.LinearColor)">
            <summary>
            Adds two colors
            </summary>
        </member>
        <member name="M:UnrealEngine.Framework.LinearColor.Subtract(UnrealEngine.Framework.LinearColor,UnrealEngine.Framework.LinearColor)">
            <summary>
            Subtracts two colors
            </summary>
        </member>
        <member name="M:UnrealEngine.Framework.LinearColor.Multiply(UnrealEngine.Framework.LinearColor,UnrealEngine.Framework.LinearColor)">
            <summary>
            Multiplies two colors
            </summary>
        </member>
        <member name="M:UnrealEngine.Framework.LinearColor.Divide(UnrealEngine.Framework.LinearColor,UnrealEngine.Framework.LinearColor)">
            <summary>
            Divides two colors
            </summary>
        </member>
        <member name="M:UnrealEngine.Framework.LinearColor.Lerp(UnrealEngine.Framework.LinearColor,UnrealEngine.Framework.LinearColor,System.Single)">
            <summary>
            Performs a linear interpolation between two colors
            </summary>
        </member>
        <member name="M:UnrealEngine.Framework.LinearColor.FromColor(System.Drawing.Color)">
            <summary>
            Converts the color into a linear color
            </summary>
        </member>
        <member name="M:UnrealEngine.Framework.LinearColor.ToVector3">
            <summary>
            Converts the linear color into a three component vector
            </summary>
        </member>
        <member name="M:UnrealEngine.Framework.LinearColor.ToVector4">
            <summary>
            Converts the linear color into a four component vector
            </summary>
        </member>
        <member name="M:UnrealEngine.Framework.LinearColor.ToArray">
            <summary>
            Creates an array containing the elements of the linear color
            </summary>
        </member>
        <member name="M:UnrealEngine.Framework.LinearColor.ToString">
            <summary>
            Returns a string that represents this instance
            </summary>
        </member>
        <member name="M:UnrealEngine.Framework.LinearColor.ToString(System.IFormatProvider)">
            <summary>
            Returns a string that represents this instance
            </summary>
        </member>
        <member name="M:UnrealEngine.Framework.LinearColor.Equals(UnrealEngine.Framework.LinearColor)">
            <summary>
            Indicates equality of objects
            </summary>
        </member>
        <member name="M:UnrealEngine.Framework.LinearColor.Equals(System.Object)">
            <summary>
            Indicates equality of objects
            </summary>
        </member>
        <member name="M:UnrealEngine.Framework.LinearColor.GetHashCode">
            <summary>
            Returns a hash code for the object
            </summary>
        </member>
        <member name="T:UnrealEngine.Framework.Assert">
            <summary>
            Functionality to detect and diagnose unexpected or invalid runtime conditions during development, emitted if the assembly is built with the <a href="https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-build#options">Debug</a> configuration or if <c>ASSERTIONS</c> symbol is defined, signals a breakpoint to an attached debugger
            </summary>
        </member>
        <member name="M:UnrealEngine.Framework.Assert.IsFalse(System.Boolean,System.String,System.Int32,System.String)">
            <summary>
            Logs an assertion if condition is <c>true</c>, and prints it on the screen
            </summary>
        </member>
        <member name="M:UnrealEngine.Framework.Assert.IsTrue(System.Boolean,System.String,System.Int32,System.String)">
            <summary>
            Logs an assertion if condition is <c>false</c>, and prints it on the screen
            </summary>
        </member>
        <member name="M:UnrealEngine.Framework.Assert.IsNull``1(``0,System.String,System.Int32,System.String)">
            <summary>
            Logs an assertion if value is not `null`, and prints it on the screen
            </summary>
        </member>
        <member name="M:UnrealEngine.Framework.Assert.IsNotNull``1(``0,System.String,System.Int32,System.String)">
            <summary>
            Logs an assertion if value is `null`, and prints it on the screen
            </summary>
        </member>
        <member name="T:UnrealEngine.Framework.Debug">
            <summary>
            Functionality for debugging
            </summary>
        </member>
        <member name="M:UnrealEngine.Framework.Debug.Log(UnrealEngine.Framework.LogLevel,System.String)">
            <summary>
            Logs a message in accordance to the specified level, omitted in builds with the <a href="https://docs.unrealengine.com/en-US/Programming/Development/BuildConfigurations/index.html#buildconfigurationdescriptions">Shipping</a> configuration
            </summary>
        </member>
        <member name="M:UnrealEngine.Framework.Debug.Exception(System.Exception)">
            <summary>
            Creates a log file with the name of assembly if required and writes an exception to it, prints it on the screen, printing on the screen is omitted in builds with the <a href="https://docs.unrealengine.com/en-US/Programming/Development/BuildConfigurations/index.html#buildconfigurationdescriptions">Shipping</a> configuration, but log file will persist
            </summary>
        </member>
        <member name="M:UnrealEngine.Framework.Debug.AddOnScreenMessage(System.Int32,System.Single,System.Drawing.Color,System.String)">
            <summary>
            Prints a debug message on the screen assigned to the key identifier, omitted in builds with the <a href="https://docs.unrealengine.com/en-US/Programming/Development/BuildConfigurations/index.html#buildconfigurationdescriptions">Shipping</a> configuration
            </summary>
        </member>
        <member name="M:UnrealEngine.Framework.Debug.ClearOnScreenMessages">
            <summary>
            Clears any existing debug messages, omitted in builds with the <a href="https://docs.unrealengine.com/en-US/Programming/Development/BuildConfigurations/index.html#buildconfigurationdescriptions">Shipping</a> configuration
            </summary>
        </member>
        <member name="M:UnrealEngine.Framework.Debug.DrawBox(System.Numerics.Vector3@,System.Numerics.Vector3@,System.Numerics.Quaternion@,System.Drawing.Color,System.Boolean,System.Single,System.Byte,System.Single)">
            <summary>
            Draws a debug box, omitted in builds with the <a href="https://docs.unrealengine.com/en-US/Programming/Development/BuildConfigurations/index.html#buildconfigurationdescriptions">Shipping</a> configuration
            </summary>
        </member>
        <member name="M:UnrealEngine.Framework.Debug.DrawCapsule(System.Numerics.Vector3@,System.Single,System.Single,System.Numerics.Quaternion@,System.Drawing.Color,System.Boolean,System.Single,System.Byte,System.Single)">
            <summary>
            Draws a debug capsule, omitted in builds with the <a href="https://docs.unrealengine.com/en-US/Programming/Development/BuildConfigurations/index.html#buildconfigurationdescriptions">Shipping</a> configuration
            </summary>
        </member>
        <member name="M:UnrealEngine.Framework.Debug.DrawCone(System.Numerics.Vector3@,System.Numerics.Vector3@,System.Single,System.Single,System.Single,System.Int32,System.Drawing.Color,System.Boolean,System.Single,System.Byte,System.Single)">
            <summary>
            Draws a debug cone, omitted in builds with the <a href="https://docs.unrealengine.com/en-US/Programming/Development/BuildConfigurations/index.html#buildconfigurationdescriptions">Shipping</a> configuration
            </summary>
        </member>
        <member name="M:UnrealEngine.Framework.Debug.DrawCylinder(System.Numerics.Vector3@,System.Numerics.Vector3@,System.Single,System.Int32,System.Drawing.Color,System.Boolean,System.Single,System.Byte,System.Single)">
            <summary>
            Draws a debug cylinder, omitted in builds with the <a href="https://docs.unrealengine.com/en-US/Programming/Development/BuildConfigurations/index.html#buildconfigurationdescriptions">Shipping</a> configuration
            </summary>
        </member>
        <member name="M:UnrealEngine.Framework.Debug.DrawSphere(System.Numerics.Vector3@,System.Single,System.Int32,System.Drawing.Color,System.Boolean,System.Single,System.Byte,System.Single)">
            <summary>
            Draws a debug sphere, omitted in builds with the <a href="https://docs.unrealengine.com/en-US/Programming/Development/BuildConfigurations/index.html#buildconfigurationdescriptions">Shipping</a> configuration
            </summary>
        </member>
        <member name="M:UnrealEngine.Framework.Debug.DrawLine(System.Numerics.Vector3@,System.Numerics.Vector3@,System.Drawing.Color,System.Boolean,System.Single,System.Byte,System.Single)">
            <summary>
            Draws a debug line, omitted in builds with the <a href="https://docs.unrealengine.com/en-US/Programming/Development/BuildConfigurations/index.html#buildconfigurationdescriptions">Shipping</a> configuration
            </summary>
        </member>
        <member name="M:UnrealEngine.Framework.Debug.DrawPoint(System.Numerics.Vector3@,System.Single,System.Drawing.Color,System.Boolean,System.Single,System.Byte)">
            <summary>
            Draws a debug point, omitted in builds with the <a href="https://docs.unrealengine.com/en-US/Programming/Development/BuildConfigurations/index.html#buildconfigurationdescriptions">Shipping</a> configuration
            </summary>
        </member>
        <member name="M:UnrealEngine.Framework.Debug.FlushPersistentLines">
            <summary>
            Flushes persistent debug lines, omitted in builds with the <a href="https://docs.unrealengine.com/en-US/Programming/Development/BuildConfigurations/index.html#buildconfigurationdescriptions">Shipping</a> configuration
            </summary>
        </member>
        <member name="T:UnrealEngine.Framework.LogLevel">
            <summary>
            Defines the log level for an output log message
            </summary>
        </member>
        <member name="F:UnrealEngine.Framework.LogLevel.Display">
            <summary>
            Logs are printed to console and log files
            </summary>
        </member>
        <member name="F:UnrealEngine.Framework.LogLevel.Warning">
            <summary>
            Logs are printed to console and log files with the yellow color
            </summary>
        </member>
        <member name="F:UnrealEngine.Framework.LogLevel.Error">
            <summary>
            Logs are printed to console and log files with the red color
            </summary>
        </member>
        <member name="F:UnrealEngine.Framework.LogLevel.Fatal">
            <summary>
            Logs are printed to console and log files then crashes the application even if logging is disabled
            </summary>
        </member>
        <member name="T:UnrealEngine.Framework.BlendType">
            <summary>
            Defines how to blend when changing view targets
            </summary>
        </member>
        <member name="F:UnrealEngine.Framework.BlendType.Linear">
            <summary>
            A simple linear interpolation
            </summary>
        </member>
        <member name="F:UnrealEngine.Framework.BlendType.Cubic">
            <summary>
            A slight ease in and ease out, but amount of ease cannot be tweaked
            </summary>
        </member>
        <member name="F:UnrealEngine.Framework.BlendType.EaseIn">
            <summary>
            Immediately accelerates, but smoothly decelerates into the target, ease amount can be controlled
            </summary>
        </member>
        <member name="F:UnrealEngine.Framework.BlendType.EaseOut">
            <summary>
            Smoothly accelerates, but does not decelerate into the target, ease amount can be controlled
            </summary>
        </member>
        <member name="F:UnrealEngine.Framework.BlendType.EaseInOut">
            <summary>
            Smoothly accelerates and decelerates, ease amount can be controlled
            </summary>
        </member>
        <member name="F:UnrealEngine.Framework.BlendType.PreBlended">
            <summary>
            The game's camera system has already performed the blending, the engine shouldn't blend at all
            </summary>
        </member>
        <member name="T:UnrealEngine.Framework.PixelFormat">
            <summary>
            Defines the pixel format
            </summary>
        </member>
        <member name="F:UnrealEngine.Framework.PixelFormat.Unknown">
            <summary/>
        </member>
        <member name="F:UnrealEngine.Framework.PixelFormat.A32B32G32R32F">
            <summary/>
        </member>
        <member name="F:UnrealEngine.Framework.PixelFormat.B8G8R8A8">
            <summary/>
        </member>
        <member name="F:UnrealEngine.Framework.PixelFormat.G8">
            <summary/>
        </member>
        <member name="F:UnrealEngine.Framework.PixelFormat.G16">
            <summary/>
        </member>
        <member name="F:UnrealEngine.Framework.PixelFormat.DXT1">
            <summary/>
        </member>
        <member name="F:UnrealEngine.Framework.PixelFormat.DXT3">
            <summary/>
        </member>
        <member name="F:UnrealEngine.Framework.PixelFormat.DXT5">
            <summary/>
        </member>
        <member name="F:UnrealEngine.Framework.PixelFormat.UYVY">
            <summary/>
        </member>
        <member name="F:UnrealEngine.Framework.PixelFormat.FloatRGB">
            <summary/>
        </member>
        <member name="F:UnrealEngine.Framework.PixelFormat.FloatRGBA">
            <summary/>
        </member>
        <member name="F:UnrealEngine.Framework.PixelFormat.DepthStencil">
            <summary/>
        </member>
        <member name="F:UnrealEngine.Framework.PixelFormat.ShadowDepth">
            <summary/>
        </member>
        <member name="F:UnrealEngine.Framework.PixelFormat.R32Float">
            <summary/>
        </member>
        <member name="F:UnrealEngine.Framework.PixelFormat.G16R16">
            <summary/>
        </member>
        <member name="F:UnrealEngine.Framework.PixelFormat.G16R16F">
            <summary/>
        </member>
        <member name="F:UnrealEngine.Framework.PixelFormat.G16R16FFilter">
            <summary/>
        </member>
        <member name="F:UnrealEngine.Framework.PixelFormat.G32R32F">
            <summary/>
        </member>
        <member name="F:UnrealEngine.Framework.PixelFormat.A2B10G10R10">
            <summary/>
        </member>
        <member name="F:UnrealEngine.Framework.PixelFormat.A16B16G16R16">
            <summary/>
        </member>
        <member name="F:UnrealEngine.Framework.PixelFormat.D24">
            <summary/>
        </member>
        <member name="F:UnrealEngine.Framework.PixelFormat.R16F">
            <summary/>
        </member>
        <member name="F:UnrealEngine.Framework.PixelFormat.R16FFilter">
            <summary/>
        </member>
        <member name="F:UnrealEngine.Framework.PixelFormat.BC5">
            <summary/>
        </member>
        <member name="F:UnrealEngine.Framework.PixelFormat.V8U8">
            <summary/>
        </member>
        <member name="F:UnrealEngine.Framework.PixelFormat.A1">
            <summary/>
        </member>
        <member name="F:UnrealEngine.Framework.PixelFormat.FloatR11G11B10">
            <summary/>
        </member>
        <member name="F:UnrealEngine.Framework.PixelFormat.A8">
            <summary/>
        </member>
        <member name="F:UnrealEngine.Framework.PixelFormat.R32UInt">
            <summary/>
        </member>
        <member name="F:UnrealEngine.Framework.PixelFormat.R32SInt">
            <summary/>
        </member>
        <member name="F:UnrealEngine.Framework.PixelFormat.PVRTC2">
            <summary/>
        </member>
        <member name="F:UnrealEngine.Framework.PixelFormat.PVRTC4">
            <summary/>
        </member>
        <member name="F:UnrealEngine.Framework.PixelFormat.R16UInt">
            <summary/>
        </member>
        <member name="F:UnrealEngine.Framework.PixelFormat.R16SInt">
            <summary/>
        </member>
        <member name="F:UnrealEngine.Framework.PixelFormat.R16G16B16A16UInt">
            <summary/>
        </member>
        <member name="F:UnrealEngine.Framework.PixelFormat.R16G16B16A16SInt">
            <summary/>
        </member>
        <member name="F:UnrealEngine.Framework.PixelFormat.R5G6B5UNorm">
            <summary/>
        </member>
        <member name="F:UnrealEngine.Framework.PixelFormat.R8G8B8A8">
            <summary/>
        </member>
        <member name="F:UnrealEngine.Framework.PixelFormat.A8R8G8B8">
            <summary/>
        </member>
        <member name="F:UnrealEngine.Framework.PixelFormat.BC4">
            <summary/>
        </member>
        <member name="F:UnrealEngine.Framework.PixelFormat.R8G8">
            <summary/>
        </member>
        <member name="F:UnrealEngine.Framework.PixelFormat.ATCRGB">
            <summary/>
        </member>
        <member name="F:UnrealEngine.Framework.PixelFormat.ATCRGBAE">
            <summary/>
        </member>
        <member name="F:UnrealEngine.Framework.PixelFormat.ATCRGBAI">
            <summary/>
        </member>
        <member name="F:UnrealEngine.Framework.PixelFormat.X24G8">
            <summary/>
        </member>
        <member name="F:UnrealEngine.Framework.PixelFormat.ETC1">
            <summary/>
        </member>
        <member name="F:UnrealEngine.Framework.PixelFormat.ETC2RGB">
            <summary/>
        </member>
        <member name="F:UnrealEngine.Framework.PixelFormat.ETC2RGBA">
            <summary/>
        </member>
        <member name="F:UnrealEngine.Framework.PixelFormat.R32G32B32A32UInt">
            <summary/>
        </member>
        <member name="F:UnrealEngine.Framework.PixelFormat.R16G16UInt">
            <summary/>
        </member>
        <member name="F:UnrealEngine.Framework.PixelFormat.ASTC4x4">
            <summary/>
        </member>
        <member name="F:UnrealEngine.Framework.PixelFormat.ASTC6x6">
            <summary/>
        </member>
        <member name="F:UnrealEngine.Framework.PixelFormat.ASTC8x8">
            <summary/>
        </member>
        <member name="F:UnrealEngine.Framework.PixelFormat.ASTC10x10">
            <summary/>
        </member>
        <member name="F:UnrealEngine.Framework.PixelFormat.ASTC12x12">
            <summary/>
        </member>
        <member name="F:UnrealEngine.Framework.PixelFormat.BC6H">
            <summary/>
        </member>
        <member name="F:UnrealEngine.Framework.PixelFormat.BC7">
            <summary/>
        </member>
        <member name="F:UnrealEngine.Framework.PixelFormat.R8UInt">
            <summary/>
        </member>
        <member name="F:UnrealEngine.Framework.PixelFormat.L8">
            <summary/>
        </member>
        <member name="F:UnrealEngine.Framework.PixelFormat.XGXR8">
            <summary/>
        </member>
        <member name="F:UnrealEngine.Framework.PixelFormat.R8G8B8A8UInt">
            <summary/>
        </member>
        <member name="F:UnrealEngine.Framework.PixelFormat.R8G8B8A8SNorm">
            <summary/>
        </member>
        <member name="F:UnrealEngine.Framework.PixelFormat.R16G16B16A16UNorm">
            <summary/>
        </member>
        <member name="F:UnrealEngine.Framework.PixelFormat.R16G16B16A16SNorm">
            <summary/>
        </member>
        <member name="F:UnrealEngine.Framework.PixelFormat.PLATFORMHDR0">
            <summary/>
        </member>
        <member name="F:UnrealEngine.Framework.PixelFormat.PLATFORMHDR1">
            <summary/>
        </member>
        <member name="F:UnrealEngine.Framework.PixelFormat.PLATFORMHDR2">
            <summary/>
        </member>
        <member name="F:UnrealEngine.Framework.PixelFormat.NV12">
            <summary/>
        </member>
        <member name="F:UnrealEngine.Framework.PixelFormat.R32G32UInt">
            <summary/>
        </member>
        <member name="F:UnrealEngine.Framework.PixelFormat.ETC2R11EAC">
            <summary/>
        </member>
        <member name="F:UnrealEngine.Framework.PixelFormat.ETC2RG11EAC">
            <summary/>
        </member>
        <member name="F:UnrealEngine.Framework.PixelFormat.R8">
            <summary/>
        </member>
        <member name="T:UnrealEngine.Framework.ObjectReference">
            <summary>
            A representation of the engine's object reference
            </summary>
        </member>
        <member name="M:UnrealEngine.Framework.ObjectReference.op_Equality(UnrealEngine.Framework.ObjectReference,UnrealEngine.Framework.ObjectReference)">
            <summary>
            Tests for equality between two objects
            </summary>
        </member>
        <member name="M:UnrealEngine.Framework.ObjectReference.op_Inequality(UnrealEngine.Framework.ObjectReference,UnrealEngine.Framework.ObjectReference)">
            <summary>
            Tests for inequality between two objects
            </summary>
        </member>
        <member name="P:UnrealEngine.Framework.ObjectReference.Name">
            <summary>
            Returns the name of the object
            </summary>
        </member>
        <member name="M:UnrealEngine.Framework.ObjectReference.Equals(UnrealEngine.Framework.ObjectReference)">
            <summary>
            Indicates equality of objects
            </summary>
        </member>
        <member name="M:UnrealEngine.Framework.ObjectReference.Equals(System.Object)">
            <summary>
            Indicates equality of objects
            </summary>
        </member>
        <member name="M:UnrealEngine.Framework.ObjectReference.GetHashCode">
            <summary>
            Returns a hash code for the object
            </summary>
        </member>
        <member name="T:UnrealEngine.Framework.Maths">
            <summary>
            Provides additional static constants and methods for mathematical functions that are lack in <see cref="T:System.Math"/>, <see cref="T:System.MathF"/>, and <see cref="N:System.Numerics"/>
            </summary>
        </member>
        <member name="F:UnrealEngine.Framework.Maths.DegToRadF">
            <summary>
            Degrees-to-radians conversion constant
            </summary>
        </member>
        <member name="F:UnrealEngine.Framework.Maths.RadToDegF">
            <summary>
            Radians-to-degrees conversion constant
            </summary>
        </member>
        <member name="M:UnrealEngine.Framework.Maths.Dot(System.Double,System.Double)">
            <summary>
            Returns the dot product of two float values
            </summary>
        </member>
        <member name="M:UnrealEngine.Framework.Maths.Saturate(System.Double)">
            <summary>
            Clamps value between 0.0d and 1.0d
            </summary>
        </member>
        <member name="M:UnrealEngine.Framework.Maths.Fraction(System.Double)">
            <summary>
            Returns the fractional part of a float value
            </summary>
        </member>
        <member name="M:UnrealEngine.Framework.Maths.DeltaAngle(System.Double,System.Double)">
            <summary>
            Calculates the shortest difference between the two given angles given in degrees
            </summary>
        </member>
        <member name="M:UnrealEngine.Framework.Maths.NextPowerOfTwo(System.Double)">
            <summary>
            Returns the next power of two
            </summary>
        </member>
        <member name="M:UnrealEngine.Framework.Maths.PreviousPowerOfTwo(System.Double)">
            <summary>
            Returns the previous power of two
            </summary>
        </member>
        <member name="M:UnrealEngine.Framework.Maths.SmoothStep(System.Double)">
            <summary>
            Performs smooth (Cubic Hermite) interpolation between 0.0d and 1.0d
            </summary>
            <param name="amount">Value between 0.0d and 1.0d indicating interpolation amount</param>
        </member>
        <member name="M:UnrealEngine.Framework.Maths.SmootherStep(System.Double)">
            <summary>
            Performs a smoother interpolation between 0.0d and 1.0d with 1st and 2nd order derivatives of zero at endpoints
            </summary>
            <param name="amount">>Value between 0.0d and 1.0d indicating interpolation amount</param>
        </member>
        <member name="M:UnrealEngine.Framework.Maths.Repeat(System.Double,System.Double)">
            <summary>
            Loops the value so that it is never larger than length and never smaller than 0.0d
            </summary>
        </member>
        <member name="M:UnrealEngine.Framework.Maths.Lerp(System.Double,System.Double,System.Double)">
            <summary>
            Interpolates between two values linearly
            </summary>
            <param name="from">Value to interpolate from</param>
            <param name="to">Value to interpolate to</param>
            <param name="amount">Interpolation amount</param>
        </member>
        <member name="M:UnrealEngine.Framework.Maths.LerpAngle(System.Double,System.Double,System.Double)">
            <summary>
            Interpolates between two values linearly, but makes sure the values calculated correctly when they wrap around 360 degrees
            </summary>
            <param name="from">Value to interpolate from</param>
            <param name="to">Value to interpolate to</param>
            <param name="amount">Interpolation amount</param>
        </member>
        <member name="M:UnrealEngine.Framework.Maths.InverseLerp(System.Double,System.Double,System.Double)">
            <summary>
            Inverse-interpolates between two values linearly
            </summary>
            <param name="from">Value to interpolate from</param>
            <param name="to">Value to interpolate to</param>
            <param name="amount">Interpolation amount</param>
        </member>
        <member name="M:UnrealEngine.Framework.Maths.Damp(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Creates framerate-independent dampened motion between two values
            </summary>
            <param name="from">Value to damp from</param>
            <param name="to">Value to damp to</param>
            <param name="lambda">Smoothing factor</param>
            <param name="deltaTime">Time since last damp</param>
        </member>
        <member name="M:UnrealEngine.Framework.Maths.MoveTowards(System.Double,System.Double,System.Double)">
            <summary>
            Returns the vector moved towards a target
            </summary>
        </member>
        <member name="M:UnrealEngine.Framework.Maths.MoveTowardsAngle(System.Double,System.Double,System.Double)">
            <summary>
            Returns the vector moved towards a target, but makes sure the values calculated correctly when they wrap around 360 degrees
            </summary>
        </member>
        <member name="M:UnrealEngine.Framework.Maths.Dot(System.Single,System.Single)">
            <summary>
            Returns the dot product of two float values
            </summary>
        </member>
        <member name="M:UnrealEngine.Framework.Maths.Saturate(System.Single)">
            <summary>
            Clamps value between 0.0f and 1.0f
            </summary>
        </member>
        <member name="M:UnrealEngine.Framework.Maths.Fraction(System.Single)">
            <summary>
            Returns the fractional part of a float value
            </summary>
        </member>
        <member name="M:UnrealEngine.Framework.Maths.DeltaAngle(System.Single,System.Single)">
            <summary>
            Calculates the shortest difference between the two given angles given in degrees
            </summary>
        </member>
        <member name="M:UnrealEngine.Framework.Maths.NextPowerOfTwo(System.Single)">
            <summary>
            Returns the next power of two
            </summary>
        </member>
        <member name="M:UnrealEngine.Framework.Maths.PreviousPowerOfTwo(System.Single)">
            <summary>
            Returns the previous power of two
            </summary>
        </member>
        <member name="M:UnrealEngine.Framework.Maths.SmoothStep(System.Single)">
            <summary>
            Performs smooth (Cubic Hermite) interpolation between 0.0f and 1.0f
            </summary>
            <param name="amount">Value between 0.0f and 1.0f indicating interpolation amount</param>
        </member>
        <member name="M:UnrealEngine.Framework.Maths.SmootherStep(System.Single)">
            <summary>
            Performs a smoother interpolation between 0.0f and 1.0f with 1st and 2nd order derivatives of zero at endpoints
            </summary>
            <param name="amount">>Value between 0.0f and 1.0f indicating interpolation amount</param>
        </member>
        <member name="M:UnrealEngine.Framework.Maths.Repeat(System.Single,System.Single)">
            <summary>
            Loops the value so that it is never larger than length and never smaller than 0.0f
            </summary>
        </member>
        <member name="M:UnrealEngine.Framework.Maths.Lerp(System.Single,System.Single,System.Single)">
            <summary>
            Interpolates between two values linearly
            </summary>
            <param name="from">Value to interpolate from</param>
            <param name="to">Value to interpolate to</param>
            <param name="amount">Interpolation amount</param>
        </member>
        <member name="M:UnrealEngine.Framework.Maths.LerpAngle(System.Single,System.Single,System.Single)">
            <summary>
            Interpolates between two values linearly, but makes sure the values calculated correctly when they wrap around 360 degrees
            </summary>
            <param name="from">Value to interpolate from</param>
            <param name="to">Value to interpolate to</param>
            <param name="amount">Interpolation amount</param>
        </member>
        <member name="M:UnrealEngine.Framework.Maths.InverseLerp(System.Single,System.Single,System.Single)">
            <summary>
            Inverse-interpolates between two values linearly
            </summary>
            <param name="from">Value to interpolate from</param>
            <param name="to">Value to interpolate to</param>
            <param name="amount">Interpolation amount</param>
        </member>
        <member name="M:UnrealEngine.Framework.Maths.Damp(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Creates framerate-independent dampened motion between two values
            </summary>
            <param name="from">Value to damp from</param>
            <param name="to">Value to damp to</param>
            <param name="lambda">Smoothing factor</param>
            <param name="deltaTime">Time since last damp</param>
        </member>
        <member name="M:UnrealEngine.Framework.Maths.MoveTowards(System.Single,System.Single,System.Single)">
            <summary>
            Returns the vector moved towards a target
            </summary>
        </member>
        <member name="M:UnrealEngine.Framework.Maths.MoveTowardsAngle(System.Single,System.Single,System.Single)">
            <summary>
            Returns the vector moved towards a target, but makes sure the values calculated correctly when they wrap around 360 degrees
            </summary>
        </member>
        <member name="M:UnrealEngine.Framework.Maths.Magnitude(System.Numerics.Vector2)">
            <summary>
            Returns the length of the vector
            </summary>
        </member>
        <member name="M:UnrealEngine.Framework.Maths.SquareMagnitude(System.Numerics.Vector2)">
            <summary>
            Returns the squared length of the vector
            </summary>
        </member>
        <member name="M:UnrealEngine.Framework.Maths.Refract(System.Numerics.Vector2,System.Numerics.Vector2,System.Single)">
            <summary>
            Returns the refraction vector
            </summary>
            <param name="value">The incident vector</param>
            <param name="normal">The normal vector</param>
            <param name="eta">The refraction index</param>
        </member>
        <member name="M:UnrealEngine.Framework.Maths.Perpendicular(System.Numerics.Vector2)">
            <summary>
            Returns the vector perpendicular to the specified vector
            </summary>
        </member>
        <member name="M:UnrealEngine.Framework.Maths.Angle(System.Numerics.Vector2,System.Numerics.Vector2)">
            <summary>
            Returns the unsigned angle in degrees
            </summary>
        </member>
        <member name="M:UnrealEngine.Framework.Maths.ClampMagnitude(System.Numerics.Vector2,System.Single)">
            <summary>
            Returns a copy of vector with clamped magnitude
            </summary>
        </member>
        <member name="M:UnrealEngine.Framework.Maths.Damp(System.Numerics.Vector2,System.Numerics.Vector2,System.Single,System.Single)">
            <summary>
            Creates framerate-independent dampened motion between two values
            </summary>
            <param name="from">Value to damp from</param>
            <param name="to">Value to damp to</param>
            <param name="lambda">Smoothing factor</param>
            <param name="deltaTime">Time since last damp</param>
        </member>
        <member name="M:UnrealEngine.Framework.Maths.MoveTowards(System.Numerics.Vector2,System.Numerics.Vector2,System.Single)">
            <summary>
            Returns the vector moved towards a target
            </summary>
        </member>
        <member name="M:UnrealEngine.Framework.Maths.Magnitude(System.Numerics.Vector3)">
            <summary>
            Returns the length of the vector
            </summary>
        </member>
        <member name="M:UnrealEngine.Framework.Maths.SquareMagnitude(System.Numerics.Vector3)">
            <summary>
            Returns the squared length of the vector
            </summary>
        </member>
        <member name="M:UnrealEngine.Framework.Maths.Refract(System.Numerics.Vector3,System.Numerics.Vector3,System.Single)">
            <summary>
            Returns the refraction vector
            </summary>
            <param name="value">The incident vector</param>
            <param name="normal">The normal vector</param>
            <param name="eta">The refraction index</param>
        </member>
        <member name="M:UnrealEngine.Framework.Maths.Angle(System.Numerics.Vector3,System.Numerics.Vector3)">
            <summary>
            Returns the unsigned angle in degrees
            </summary>
        </member>
        <member name="M:UnrealEngine.Framework.Maths.SignedAngle(System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3)">
            <summary>
            Returns the signed angle in degrees
            </summary>
        </member>
        <member name="M:UnrealEngine.Framework.Maths.ClampMagnitude(System.Numerics.Vector3,System.Single)">
            <summary>
            Returns a copy of vector with clamped magnitude
            </summary>
        </member>
        <member name="M:UnrealEngine.Framework.Maths.Damp(System.Numerics.Vector3,System.Numerics.Vector3,System.Single,System.Single)">
            <summary>
            Creates framerate-independent dampened motion between two values
            </summary>
            <param name="from">Value to damp from</param>
            <param name="to">Value to damp to</param>
            <param name="lambda">Smoothing factor</param>
            <param name="deltaTime">Time since last damp</param>
        </member>
        <member name="M:UnrealEngine.Framework.Maths.MoveTowards(System.Numerics.Vector3,System.Numerics.Vector3,System.Single)">
            <summary>
            Returns the vector moved towards a target
            </summary>
        </member>
        <member name="M:UnrealEngine.Framework.Maths.Project(System.Numerics.Vector3,System.Numerics.Vector3)">
            <summary>
            Projects a vector onto another vector
            </summary>
        </member>
        <member name="M:UnrealEngine.Framework.Maths.ProjectOnPlane(System.Numerics.Vector3,System.Numerics.Vector3)">
            <summary>
            Projects a vector onto a plane defined by a normal orthogonal to the plane
            </summary>
        </member>
        <member name="M:UnrealEngine.Framework.Maths.Magnitude(System.Numerics.Vector4)">
            <summary>
            Returns the length of the vector
            </summary>
        </member>
        <member name="M:UnrealEngine.Framework.Maths.SquareMagnitude(System.Numerics.Vector4)">
            <summary>
            Returns the squared length of the vector
            </summary>
        </member>
        <member name="M:UnrealEngine.Framework.Maths.Refract(System.Numerics.Vector4,System.Numerics.Vector4,System.Single)">
            <summary>
            Returns the refraction vector
            </summary>
            <param name="value">The incident vector</param>
            <param name="normal">The normal vector</param>
            <param name="eta">The refraction index</param>
        </member>
        <member name="M:UnrealEngine.Framework.Maths.Euler(System.Single,System.Single,System.Single)">
            <summary>
            Returns a rotation which rotates z degrees around the z axis, x degrees around the x axis, and y degrees around the y axis
            </summary>
        </member>
        <member name="M:UnrealEngine.Framework.Maths.Euler(System.Numerics.Vector3)">
            <summary>
            Returns a rotation which rotates z degrees around the z axis, x degrees around the x axis, and y degrees around the y axis
            </summary>
        </member>
        <member name="M:UnrealEngine.Framework.Maths.Angle(System.Numerics.Quaternion,System.Numerics.Quaternion)">
            <summary>
            Returns the unsigned angle in degrees
            </summary>
        </member>
        <member name="M:UnrealEngine.Framework.Maths.AngleAxis(System.Single,System.Numerics.Vector3)">
            <summary>
            Returns a rotation which rotates angle degrees around axis
            </summary>
        </member>
        <member name="M:UnrealEngine.Framework.Maths.FromToRotation(System.Numerics.Vector3,System.Numerics.Vector3)">
            <summary>
            Returns a rotation which rotates from <paramref name="fromDirection"/> to <paramref name="toDirection"/>
            </summary>
        </member>
        <member name="M:UnrealEngine.Framework.Maths.Damp(System.Numerics.Quaternion,System.Numerics.Quaternion,System.Single,System.Single)">
            <summary>
            Creates framerate-independent dampened motion between two values
            </summary>
            <param name="from">Value to damp from</param>
            <param name="to">Value to damp to</param>
            <param name="lambda">Smoothing factor</param>
            <param name="deltaTime">Time since last damp</param>
        </member>
        <member name="M:UnrealEngine.Framework.Maths.RotateTowards(System.Numerics.Quaternion,System.Numerics.Quaternion,System.Single)">
            <summary>
            Returns a rotation which rotated towards a target
            </summary>
        </member>
        <member name="M:UnrealEngine.Framework.Maths.CreateFromYawPitchRoll(System.Single,System.Single,System.Single)">
            <summary>
            Returns a rotation from the given yaw, pitch, and roll, in radians
            </summary>
        </member>
    </members>
</doc>
